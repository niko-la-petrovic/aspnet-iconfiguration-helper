import { useEffect, useState } from "react";

import Head from "next/head";
import Image from "next/image";
import Link from "next/link";
import type { NextPage } from "next";
import dynamic from "next/dynamic";
import styles from "../styles/Home.module.css";

const Home: NextPage = () => {
  const DynamicReactJson = dynamic(import("react-json-view"), { ssr: false });

  const [jsonConfig, setJsonConfig] = useState<string | null>(null);

  const [jsonObject, setJsonObject] = useState<any | null>(null);
  const [result, setResult] = useState<string[] | null>(null);
  useEffect(() => {
    try {
      setJsonObject(JSON.parse(jsonConfig ?? "{}"));
    } catch (e) {
      console.error(e);
    }
  }, [jsonConfig]);

  useEffect(() => {
    const result: string[] = handleJsonObject(jsonObject, true);
    setResult(result);
  }, [jsonObject]);

  const handleJsonObject = (
    jsonObject: any | null,
    isFirst: boolean
  ): string[] => {
    const keys = Object.keys(jsonObject ?? {});
    if (keys?.length == 0) return [];

    if (!isFirst)
      return [
        ...keys.flatMap((key) => {
          const value = jsonObject[key];
          const valueType = typeof value;
          if (
            valueType === "number" ||
            valueType === "string" ||
            value === "boolean"
          )
            return [`${key}=${value}`];
          else if (value instanceof Array) {
            return value.flatMap((v, i) => {
              const valueType = typeof v;
              if (
                valueType === "number" ||
                valueType === "string" ||
                v === "boolean"
              )
                return [`${key}__${i}=${v}`];
              else
                return handleJsonObject(v, false).map(
                  (v) => `${key}__${i}__${v}`
                );
            });
          } else
            return handleJsonObject(value, false).map((v) => `${key}__${v}`);
        }),
      ];
    else
      return keys.flatMap((key) =>
        handleJsonObject(jsonObject[key], false).flatMap(
          (value) => `ASPNETCORE_${key}__${value}`
        )
      );
  };

  const resultStr = result?.join("\r");
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>ASP.NET Configuration Helper</h1>

        <p className={styles.description}>
          Paste your JSON configuration below
          <code className={styles.code}>e.g. appsettings.json</code>
        </p>

        <div className="flex items-center justify-evenly gap-x-2 w-full h-full">
          <div className="flex shadow-lg justify-center grow">
            <textarea
              className="w-full grow"
              placeholder="..."
              value={jsonConfig ?? ""}
              onChange={(e) => setJsonConfig(e.target.value)}
            />
          </div>

          <div className="flex grow justify-center">
            <DynamicReactJson src={jsonObject} />
          </div>

          <div className="flex flex-col justify-center items-center gap-y-4 grow h-full">
            <textarea
              className="w-full min-h-full grow shadow-lg"
              placeholder="..."
              value={resultStr}
            />
            <button
              className="w-full bg-blue-600 text-white rounded-lg p-2 font-semibold hover:bg-blue-700 active:bg-blue-800"
              onClick={() => navigator.clipboard.writeText(resultStr ?? "")}
            >
              Copy
            </button>
          </div>
        </div>
      </main>

      <footer className={styles.footer}>
        <div className="flex items-center justify-center gap-x-4">
          <span>by</span>
          <div>
            <Link href="https://niko-la-petrovic.github.io/aspnet-iconfiguration-helper/">
              <a>niko-la-petrovic</a>
            </Link>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Home;
